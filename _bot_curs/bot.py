from logging import StringTemplateStyle
import telebot
import os

import random
 
from telebot import types

class Place(object):   
    emp_count = 0  
  
    def __init__(self, adres, square, price, number_own,picture):  
        self.adres = adres  
        self.square = square
        self.price = price
        self.number_own = number_own 
        self.picture = os.system(f"{picture}")

        Place.emp_count += 1  
  
    def display_count(self):  
        print('–í—Å–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: %d' % Place.empCount)  
    def get_square(self):
        return self.square
  
    def display_place(self):  
        return f'–ê–¥—Ä–µ—Å: {self.adres}.\n –ü–ª–æ—â–∞–¥—å: {self.square} –º–µ—Ç—Ä–æ–≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö. \n –¶–µ–Ω–∞ –∑–∞ –º–µ—Å—è—Ü: {self.price}. \n –ù–æ–º–µ—Ä –∞—Ä–µ–Ω–¥–∞–¥–∞—Ç–µ–ª—è: {self.number_own}.\n {self.picture}'
place1=Place("—É–ª.–ì–æ–ª—É–±–µ–≤–∞ 12",'140','550$','+375445567890','E:\bot_curs\1.jpg')
place2=Place("—É–ª.–û–ª—å—à–µ–≤—Å–∫–æ–≥–æ 51",'100','480$','+375447565690','E:\bot_curs\1.jpg')
place3=Place("—É–ª.–¢–∞—Ä–∞–∫–∞–Ω–æ–≤–∞ 4–ê",'89','300$','+375290986745','E:\bot_curs\1.jpg')
place4=Place("–ø—Ä.–î–∑–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ 15",'70','250$','+375293476745','E:\bot_curs\1.jpg')
place5=Place("–ø—Ä.–ü—Ä–∞–≤–¥—ã 7",'110','430$','+375290980005','E:\bot_curs\1.jpg')

mas = [place1,place2,place3,place4,place5]


#-----------------------------------------------------------------------------------------------------------      
 #BOT
bot = telebot.TeleBot('1715199163:AAG_nJC8vpbL1ignSxUL8oZ-kHxhbaVCffA')


@bot.message_handler(commands=['start'])
def welcome(message):
 
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã")
    item2 = types.KeyboardButton("–ü–æ –ø–ª–æ—â–∞–¥–∏")
 
    markup.add(item1, item2)
 
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∞—Ä–µ–Ω–¥—ã –ø–ª–æ—â–∞–¥–∏".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
 
@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == '–í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã':
            for i in range(0,len(mas)):
                p = mas[i].display_place()
                bot.send_message(message.chat.id, f" {p}")
        elif message.text == '–ü–æ –ø–ª–æ—â–∞–¥–∏':
 
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton(">=100", callback_data='good')
            item2 = types.InlineKeyboardButton("<100", callback_data='bad')
 
            markup.add(item1, item2)
 
            bot.send_message(message.chat.id, '–∫–∞–∫–∞—è –ø–ª–æ—â–∞–¥—å –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?(–≤ –º^2)', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')
 
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                count=0
                bot.send_message(call.message.chat.id, '–í–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n')
                for i in range(0,len(mas)):
                    if(int(mas[i].get_square())>=100):
                        count+=1
                        p = mas[i].display_place()
                        bot.send_message(call.message.chat.id, f" {p}")
                if(count==0):
                    bot.send_message(call.message.chat.id,"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–µ –Ω–∞—à–ª–æ—Å—å , –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")



            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ú–æ–∂–µ–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–∞–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:')
                count2=0
                for i in range(0,len(mas)):
                    if(int(mas[i].get_square())<100):
                        count2+=1
                        p = mas[i].display_place()
                        bot.send_message(call.message.chat.id, f" {p}")
                if(count2==0):
                    bot.send_message(call.message.chat.id,"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–µ –Ω–∞—à–ª–æ—Å—å , –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
 
 
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")
 
    except Exception as e:
        print(repr(e))
 
# RUN
bot.polling(none_stop=True)